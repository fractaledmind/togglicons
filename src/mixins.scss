/// How to handle primary line stroke
@mixin show-center-stroke {
  & {
    @content;
  }
}
///---------------
/// SIMPLE ICONS
///---------------

// 1 stroke icon
@mixin minus($stroke-height) {
  @include show-center-stroke {
    transform: rotate(deg(90));
  }
  &::before,
  &::after {
    height: px($stroke-height);
  }
  &::before {
    transform: rotate(0);
  }
  &::after {
    transform: rotate(0);
  }
}

// 1 stroke icon
@mixin bar($stroke-height) {
  @include show-center-stroke {
    transform: rotate(deg(0));
  }
  &::before,
  &::after {
    height: px($stroke-height);
  }
  &::before {
    transform: rotate(0);
  }
  &::after {
    transform: rotate(0);
  }
}

// 2 stroke icon
@mixin close($stroke-height) {
  @include show-center-stroke {
    transform: rotate($_rotate-delta);
  }
  &::before,
  &::after {
    height: px($stroke-height);
  }
  &::before {
    transform: rotate(deg(90));
  }
  &::after {
    transform: rotate(0);
  }
}

// 2 stroke icon
@mixin plus($stroke-height) {
  @include show-center-stroke {
    transform: rotate(0);
  }
  &::before,
  &::after {
    height: px($stroke-height);
  }
  &::before {
    transform: rotate(0);
  }
  &::after {
    transform: rotate(deg(90));
  }
}

// 3 stroke icon
@mixin asterisk($stroke-height) {
  @include show-center-stroke {
    transform: rotate(0);
  }
  &::before,
  &::after {
    height: px($stroke-height);
  }
  &::before {
    transform: rotate(deg(60));
  }
  &::after {
    transform: rotate(deg(-60));
  }
}

///---------------
/// COMPLEX ICONS
///---------------

// 2 stroke icon
@mixin check($stroke-height, $stroke-width) {
  $mini-height: (
    (($stroke-height - $stroke-width) / 2)
    + $stroke-width
  );
  $x-mid-delta: (
    (calc-rotated-bbox-x($stroke-height, $stroke-width, 45) / 2)
    - calc-width-rotated-x($stroke-width, 45)
  );
  $x-delta: (
    ($mini-height - $stroke-width) / 2
  );

  @include show-center-stroke {
    transform: translate(px($x-mid-delta), 0) rotate(deg(225));
  }
  &::before {
    height: px($stroke-height);
    transform: rotate(deg(180));
  }
  &::after {
    height: px($mini-height);
    transform: translate(px($x-delta), px(-$x-delta)) rotate(deg(-90));
  }
}

// 3 stroke icon
@mixin menu($stroke-height, $stroke-width) {
  @include show-center-stroke {
    transform: rotate(deg(90));
  }
  &::before,
  &::after {
    height: px($stroke-height);
  }
  &::before {
    transform: translateX(px($stroke-width*2));
  }
  &::after {
    transform: translateX(px(-$stroke-width*2));
  }
}

// 2 stroke icon
@mixin chevron($dir, $stroke-height, $stroke-width) {
  $x-delta: (
    ($stroke-height - $stroke-width) / 2
  );
  $x-mid-delta: (
    (calc-rotated-bbox-x($stroke-height, $stroke-width, 45) / 2)
    - calc-width-rotated-x($stroke-width, 45)
  );

  &::before,
  &::after {
    height: px($stroke-height);
  }
  &::after {
    transform: translate(0, 0) rotate(0);
  }

  @if $dir=='down' {
    @include show-center-stroke {
      transform: translate(px($x-mid-delta), 0) rotate(deg(45));
    }
    &::before {
      transform: translate(px(-$x-delta), px($x-delta)) rotate(deg(90));
    }
  }
  @else if $dir=='up' {
    @include show-center-stroke {
      transform: translate(px(-$x-mid-delta), 0) rotate(deg(45));
    }
    &::before {
      transform: translate(px($x-delta), px(-$x-delta)) rotate(deg(90));
    }
  }
  @else if $dir=='left' {
    @include show-center-stroke {
      transform: translate(0, px(-$x-mid-delta)) rotate(deg(45));
    }
    &::before {
      transform: translate(px($x-delta), px($x-delta)) rotate(deg(90));
    }
  }
  @else if $dir=='right' {
    @include show-center-stroke {
      transform: translate(0, px($x-mid-delta)) rotate(deg(45));
    }
    &::before {
      transform: translate(px(-$x-delta), px(-$x-delta)) rotate(deg(90));
    }
  }
}

// 3 stroke icon
@mixin arrow($dir, $stroke-height, $stroke-width) {
  $mini-height: (
    (($stroke-height - $stroke-width) / 2)
    + $stroke-width
  );
  $mini-square:     calc-rotated-bbox-x($mini-height, $stroke-width, 45);
  $stroke-square:   calc-rotated-bbox-x($stroke-height, $stroke-width, 45);
  $x-delta: (
    ($stroke-square - $mini-square) / 2
  );
  $y-delta: (
    $mini-height / 5
  );

  &::before,
  &::after {
    height: px($mini-height);
  }

  @if index(('up', 'down'), $dir) {
    @include show-center-stroke {
      transform: rotate(0);
    }
  }
  @else if index(('right', 'left'), $dir) {
    @include show-center-stroke {
      transform: rotate(deg(90));
    }
  }

  @if index(('up', 'right'), $dir) {
    &::before {
      transform: translate(px(-$x-delta),px(-$y-delta)) rotate(deg(45));
    }
    &::after {
      transform: translate(px($x-delta),px(-$y-delta)) rotate(deg(-45));
    }
  }
  @else if index(('down', 'left'), $dir) {
    $y-delta: ($y-delta + ($stroke-height - $mini-height));
    &::before {
      transform: translate(px(-$x-delta), px($y-delta)) rotate(deg(-45));
    }
    &::after {
      transform: translate(px($x-delta), px($y-delta)) rotate(deg(45));
    }
  }
}
