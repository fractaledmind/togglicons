/// Convert one unit into another, @author Hugo Giraudel
@function convert-unit($value, $unit) {
  $units: ('px': 0px,'cm': 0cm,'mm': 0mm,'%': 0%,'ch': 0ch,'in': 0in,'em': 0em,'rem': 0rem,'pt': 0pt,'pc': 0pc,'ex': 0ex,'vw': 0vw,'vh': 0vh,'vmin': 0vmin,'vmax': 0vmax,'deg': 0deg,'turn': 0turn,'rad': 0rad,'grad': 0grad,'s': 0s,'ms': 0ms,'Hz': 0Hz,'kHz': 0kHz,'dppx': 0dppx,'dpcm': 0dpcm,'dpi': 0dpi);
  @if map-has-key($units, $unit) {
    @return map-get($units, $unit) + $value;
  }
  @error "Unknown unit `#{$unit}`.";
}

/// Convert integer to pixels
@function px($int) {
  @return convert-unit($int, "px");
}

/// Convert integer to degrees
@function deg($int) {
  @return convert-unit($int, "deg");
}

/// Compute side length of square that bounds a rectangle rotated 45 degrees
@function rotated-length($height, $width) {
  @return ($width / $_sqrt-2) + ($height / $_sqrt-2);

// MATH
// https://unindented.org/articles/trigonometry-in-sass/
@function pow($number, $exp) {
  $value: 1;
  @if $exp > 0 {
    @for $i from 1 through $exp {
      $value: $value * $number;
    }
  }
  @else if $exp < 0 {
    @for $i from 1 through -$exp {
      $value: $value / $number;
    }
  }
  @return $value;
}

@function fact($number) {
  $value: 1;
  @if $number > 0 {
    @for $i from 1 through $number {
      $value: $value * $i;
    }
  }
  @return $value;
}

@function rad($angle) {
  $unit: unit($angle);
  $unitless: $angle / ($angle * 0 + 1);
  // If the angle has 'deg' as unit, convert to radians.
  @if $unit == deg {
    $unitless: $unitless / 180 * $PI;
  }
  @return $unitless;
}

@function sin($angle) {
  $sin: 0;
  $angle: rad($angle);
  // Iterate a bunch of times.
  @for $i from 0 through 10 {
    $sin: $sin + pow(-1, $i) * pow($angle, (2 * $i + 1)) / fact(2 * $i + 1);
  }
  @return $sin;
}

@function cos($angle) {
  $cos: 0;
  $angle: rad($angle);
  // Iterate a bunch of times.
  @for $i from 0 through 10 {
    $cos: $cos + pow(-1, $i) * pow($angle, 2 * $i) / fact(2 * $i);
  }
  @return $cos;
}
}

/// Compute difference between the top of the rectangle standing upright
/// and top of bounded square formed when that rectangle is rotated 45 degrees
@function rotated-height-diff($height, $width) {
  @return ($height - rotated-length($height, $width)) / 2;
}
